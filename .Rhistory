# Cargar pacman (contiene la función p_load)
library(pacman)
knitr::opts_chunk$set(echo = TRUE)
# Cargar paquetes
#install.packages("openxlsx")
library(openxlsx)
# Cargar paquetes
install.packages("openxlsx")
library(openxlsx)
install.packages("dplyr")
library(dplyr)
# Cargar las bases de datos
base_pob <- read.csv("mun_area.csv")
base_area <- read.xlsx("pob_censal.xlsx")
# Observar estructura de base area
str(base_area)
# Número total de filas
nrow(base_area)
# Observar estructura de base area
str(base_pob)
# Número total de filas
nrow(base_pob)
library(tibble)
Diccionario <- tribble(
~Variable,~Clasificacion,~Tipo,~Fromato,
"DP","Identificación","Nominal","Numérico",
"DPMP", "Identificación","Nominal", "Numérico",
"MPIO_NAREA", "Medición", "Continuo", "Numérico",
"AÑO_CREACION", "Identificación", "Ordinal", "Numérico",
"DPNOM", "Identiticación", "Nominal", "Texto",
"MPIO", "Identificación", "Nominal", "Texto",
"AÑO", "Identificación", "Ordinal", "Numérico",
"POBLACIÓN", "Medición", "Continuo", "Numérico"
)
print(Diccionario)
Diccionario <- tribble(
~Variable,~Clasificación,~Tipo,~Fromato,
"DP","Identificación","Nominal","Numérico",
"DPMP", "Identificación","Nominal", "Numérico",
"MPIO_NAREA", "Medición", "Continuo", "Numérico",
"AÑO_CREACION", "Identificación", "Ordinal", "Numérico",
"DPNOM", "Identiticación", "Nominal", "Texto",
"MPIO", "Identificación", "Nominal", "Texto",
"AÑO", "Identificación", "Ordinal", "Numérico",
"POBLACIÓN", "Medición", "Continuo", "Numérico"
)
print(Diccionario)
View(base_pob)
View(base_area)
# Observar estructura de base area
str(base_pob)
summary(base_area$Población)
summary(base_pob$MPIO_NAREA)
Reglas <- tribble(
~Variable,~Tipo_de_regla,~Regla,
"AÑO","Dominio","AÑO ∈{1985, 1993, 2005, 2018}",
"POBLACIÓN", "Rango","Población > 0",
"ÁREA", "Rango", "Área > 0 "
)
print(Reglas)
# Cambiar nombres
base_pob <- base_pob %>%
rename(AÑO = AÑO_CREACION)
# Llave en población
base_pob <- base_pob %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
# Llave en area
base_area <- base_area %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
View(base_area)
View(base_pob)
# Calcular NA
colSums(is.na(base_pob))
colSums(is.na(base_area))
# Verificar duplicados
base_pob[duplicated(base_pob),]
base_area[duplicated(base_area),]
# Unir muchos a uno
merge <- merge(base_pob, base_area, by = "DPMP", all.x = TRUE)
# Limpieza de la base
base_final <- merge %>%
transmute(
DPMP,
DP = DP.x,
DPNOM,
MPIO,
Area = MPIO_NAREA,  # área fpor municipio
Año = AÑO.y,         # año de población
Poblacion = Población,
llave = paste0(DPMP, "_", AÑO.y) # única llave municipio–año
)
View(base_final)
drop(base_final)
# Unir muchos a uno
merge <- merge(base_pob, base_area, by = "llave", all.x = TRUE)
# Limpieza de la base
base_final <- merge %>%
transmute(
DPMP,
DP = DP.x,
DPNOM,
MPIO,
Area = MPIO_NAREA,  # área por municipio
Año = AÑO.y,         # año de población
Poblacion = Población,
llave = paste0(DPMP, "_", AÑO.y) # única llave municipio–año
)
View(base_final)
# Limpieza de la base
base_final <- merge %>%
transmute(
DPMP,
DP = DP.x,
DPNOM,
MPIO,
Area = MPIO_NAREA,  # área por municipio
Año = AÑO.y,         # año de población
Poblacion = Población,
llave = paste0(DPMP, "_", AÑO.y) # única llave municipio–año
)
desc(merge)
summary(merge)
View(base_final)
View(merge)
View(base_area)
View(base_area)
# Unir uno a uno
base_final <- merge(base_pob, base_area, by = "llave", all = FALSE)
drop(base_final)
# Verificar duplicados
anyDuplicated(base_pob$llave)
anyDuplicated(base_area$llave)
# Unir uno a uno
base_final <- merge(base_pob, base_area, by = "llave", all = FALSE)
View(base_final)
View(base_final)
rm(list = ls())
# Cargar paquetes
#install.packages("openxlsx")
library(openxlsx)
#install.packages("dplyr")
library(dplyr)
library(tibble)
# Cargar las bases de datos
base_pob <- read.csv("mun_area.csv")
base_area <- read.xlsx("pob_censal.xlsx")
View(base_area)
View(base_pob)
# Observar estructura de base area
str(base_area)
# Observar estructura de base area
str(base_pob)
Diccionario <- tribble(
~Variable,~Clasificación,~Tipo,~Fromato,
"DP","Identificación","Nominal","Numérico",
"DPMP", "Identificación","Nominal", "Numérico",
"MPIO_NAREA", "Medición", "Continuo", "Numérico",
"AÑO_CREACION", "Identificación", "Ordinal", "Numérico",
"DPNOM", "Identiticación", "Nominal", "Texto",
"MPIO", "Identificación", "Nominal", "Texto",
"AÑO", "Identificación", "Ordinal", "Numérico",
"POBLACIÓN", "Medición", "Continuo", "Numérico"
)
print(Diccionario)
Reglas <- tribble(
~Variable,~Tipo_de_regla,~Regla,
"AÑO","Dominio","AÑO ∈{1985, 1993, 2005, 2018}",
"POBLACIÓN", "Rango","Población > 0",
"ÁREA", "Rango", "Área > 0 "
)
print(Reglas)
# Cambiar nombres
base_pob <- base_pob %>%
rename(AÑO = AÑO_CREACION)
View(base_pob)
# Llave en población
base_pob <- base_pob %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
# Llave en area
base_area <- base_area %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
View(base_area)
View(base_pob)
# Unir uno a uno
base_final <- merge(base_pob, base_area, by = "DPMP", all = FALSE)
View(base_final)
# Unir uno a uno
base_final <- merge(base_pob, base_area, by = "DPMP", all.x = TRUE)
View(base_final)
rm(list = ls())
#install.packages("dplyr")
library(dplyr)
library(tibble)
# Cargar las bases de datos
base_pob <- read.csv("mun_area.csv")
base_area <- read.xlsx("pob_censal.xlsx")
# Observar estructura de base area
str(base_area)
# Número total de filas
nrow(base_area)
# Observar estructura de base area
str(base_pob)
# Número total de filas
nrow(base_pob)
#Creación de un diccionario
Diccionario <- tribble(
~Variable,~Clasificación,~Tipo,~Fromato,
"DP","Identificación","Nominal","Numérico",
"DPMP", "Identificación","Nominal", "Numérico",
"MPIO_NAREA", "Medición", "Continuo", "Numérico",
"AÑO_CREACION", "Identificación", "Ordinal", "Numérico",
"DPNOM", "Identiticación", "Nominal", "Texto",
"MPIO", "Identificación", "Nominal", "Texto",
"AÑO", "Identificación", "Ordinal", "Numérico",
"POBLACIÓN", "Medición", "Continuo", "Numérico"
)
print(Diccionario)
Reglas <- tribble(
~Variable,~Tipo_de_regla,~Regla,
"AÑO","Dominio","AÑO ∈{1985, 1993, 2005, 2018}",
"POBLACIÓN", "Rango","Población > 0",
"ÁREA", "Rango", "Área > 0 "
)
print(Reglas)
# Cambiar nombres
base_pob <- base_pob %>%
rename(AÑO = AÑO_CREACION)
# Llave en población
base_pob <- base_pob %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
# Calcular NA
colSums(is.na(base_pob))
colSums(is.na(base_area))
# Verificar duplicados
anyDuplicated(base_pob$llave)
anyDuplicated(base_area$llave)
# Unir uno a uno
base_final <- merge(base_pob, base_area, by = "DPMP", all.x = TRUE)
View(base_final)
colSums(is.na(base_final))
rm(base_final)
# Unir uno a uno
base_final <- merge(base_pob, base_area, by = "DPMP", all = FALSE)
View(base_area)
View(base_final)
View(base_pob)
base_pob %>% count(DPMP)
base_pob %>% count(DPMP)
base_pob
%>% count(AÑO)
base_pob %>% count(AÑO)
conteo <- base_pob %>% count(AÑO)
sum(conteo$n)
# Unir many to one
base_final <- base_area %>%
left_join(base_pob, by = "DPMP", relationship = "many-to-one")
rm(base_final)
View(base_pob)
View(base_area)
rm(base_area)
rm(base_pob)
# Cargar las bases de datos
base_area <- read.csv("mun_area.csv")
base_pob <- read.xlsx("pob_censal.xlsx")
View(base_area)
# Observar estructura de base area
str(base_area)
# Número total de filas
nrow(base_area)
# Observar estructura de base area
str(base_pob)
# Número total de filas
nrow(base_pob)
Diccionario <- tribble(
~Variable,~Clasificación,~Tipo,~Fromato,
"DP","Identificación","Nominal","Numérico",
"DPMP", "Identificación","Nominal", "Numérico",
"MPIO_NAREA", "Medición", "Continuo", "Numérico",
"AÑO_CREACION", "Identificación", "Ordinal", "Numérico",
"DPNOM", "Identiticación", "Nominal", "Texto",
"MPIO", "Identificación", "Nominal", "Texto",
"AÑO", "Identificación", "Ordinal", "Numérico",
"POBLACIÓN", "Medición", "Continuo", "Numérico"
)
print(Diccionario)
Reglas <- tribble(
~Variable,~Tipo_de_regla,~Regla,
"AÑO","Dominio","AÑO ∈{1985, 1993, 2005, 2018}",
"POBLACIÓN", "Rango","Población > 0",
"ÁREA", "Rango", "Área > 0 "
)
# Llave en población
base_pob <- base_pob %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
# Calcular NA
colSums(is.na(base_pob))
colSums(is.na(base_area))
# Verificar duplicados
anyDuplicated(base_pob$llave)
anyDuplicated(base_area$llave)
stopifnot(nrow(base_pob) == 1)
Reglas <- tribble(
~Variable,~Tipo_de_regla,~Regla,
"AÑO","Dominio","AÑO ∈{1985, 1993, 2005, 2018}",
"POBLACIÓN", "Rango","Población > 0",
"ÁREA", "Rango", "Área > 0 "
)
print(Reglas)
# Llave en población
base_pob <- base_pob %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
# Calcular NA
colSums(is.na(base_pob))
colSums(is.na(base_area))
# Verificar duplicados
anyDuplicated(base_pob$llave)
anyDuplicated(base_area$llave)
# Unir many to one
base_final <- left_join(
base_pob, base_area,
by = "DPMP",
relationship = "many-to-one"
)
View(base_final)
rm(base_final)
# Unir many to one
base_final <- left_join(
base_area, base_pob,
by = "DPMP",
relationship = "many-to-one"
)
rm(base_pob)
base_pob <- read.xlsx("pob_censal.xlsx")
View(base_pob)
rm(list = ls())
# Cargar paquetes
#install.packages("openxlsx")
library(openxlsx)
#install.packages("dplyr")
library(dplyr)
library(tibble)
# Cargar las bases de datos
base_area <- read.csv("mun_area.csv")
View(base_area)
base_pob <- read.xlsx("pob_censal.xlsx")
View(base_pob)
# Observar estructura de base area
str(base_area)
# Número total de filas
nrow(base_area)
# Observar estructura de base area
str(base_pob)
Diccionario <- tribble(
~Variable,~Clasificación,~Tipo,~Fromato,
"DP","Identificación","Nominal","Numérico",
"DPMP", "Identificación","Nominal", "Numérico",
"MPIO_NAREA", "Medición", "Continuo", "Numérico",
"AÑO_CREACION", "Medición", "Ordinal", "Numérico",
"DPNOM", "Identiticación", "Nominal", "Texto",
"MPIO", "Identificación", "Nominal", "Texto",
"AÑO", "Identificación", "Ordinal", "Numérico",
"POBLACIÓN", "Medición", "Continuo", "Numérico"
)
print(Diccionario)
Reglas <- tribble(
~Variable,~Tipo_de_regla,~Regla,
"AÑO","Dominio","AÑO ∈{1985, 1993, 2005, 2018}",
"POBLACIÓN", "Rango","Población > 0",
"ÁREA", "Rango", "Área > 0 "
)
print(Reglas)
# Llave en población
base_pob <- base_pob %>%
mutate(llave = paste(DPMP, AÑO, sep = "_"))
conteo_filas <- base_pob %>%
count(DPMP, name = "n_filas")
View(conteo_filas)
rm(conteo_filas)
# Unir many to one
base_final <- left_join(
base_pob, base_area,
by = "DPMP",
relationship = "many-to-one"
)
conteo_filas <- base_final %>%
+     count(DPMP, name = "n_filas")
View(base_final)
summary(base_final)
base_final %>% count(DPMP)
#Arreglo de base de datos
base_final <- base_final %>%
select(-DP.y) %>%
rename(DP = DP.x) %>%
select(llave, everything())
View(base_final)
#Revisión de la unión
base_final <- base_final %>%
arrange(DPMP, AÑO)
View(base_final)
