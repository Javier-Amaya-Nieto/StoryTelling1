print(top_per)
View(base_completa)
muni_prueba <- base_completa %>%
filter(municipio == "Toribío")
prueba <- base_completa %>%
filter(mpio == "Toribío")
View(prueba)
# Top 20 en crecimiento absoluto
top_abs <- base_completa %>%
group_by(mpio) %>%
%>%
# Top 20 en crecimiento absoluto
top_abs <- base_completa %>%
group_by(mpio) %>%
arrange(desc(crecimiento_abs)) %>%
slice_head(n = 20)
print(top_abs)
# Top 20 en crecimiento absoluto
top_abs <- base_completa %>%
group_by(mpio) %>%
summarise(crecimiento_abs = sum(crecimiento_abs, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(crecimiento_abs)) %>%
slice_head(n = 20)
print(top_abs)
prueba <- base_completa %>%
filter(mpio == "Bogotá. D.C.")
View(prueba)
prueba <- base_completa %>%
filter(mpio == "Medellín")
View(prueba)
# Top 20 en crecimiento absoluto
top_abs <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_abs = pob_2018 - pob_1985) %>%
arrange(desc(crecimiento_abs)) %>%
slice_head(n = 20)
print(top_abs)
# Top 20 en crecimiento absoluto
top_abs <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_abs = pob_2018 - pob_1985) %>%
arrange(desc(crecimiento_abs)) %>%
select(mpio, crecimiento_abs)
print(top_abs)
prueba <- base_completa %>%
filter(municipio == "Cali")
prueba <- base_completa %>%
filter(mpio == "Cali")
View(prueba)
write.csv(top_abs, "top_abs.csv", row.names = FALSE)
# Top 20 en crecimiento absoluto
top_abs <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_abs = pob_2018 - pob_1985) %>%
arrange(desc(crecimiento_abs)) %>%
select(mpio, crecimiento_abs) %>%
slice_head(n = 20)
print(top_abs)
write.xlsx(top_abs, file = "top_abs", overwrite = TRUE)
write.xlsx(top_abs, file = "top_abs.xlsx", overwrite = TRUE)
# Top 20 en crecimiento porcentual
top_per <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_abs = pob_2018 - pob_1985) %>%
arrange(desc(crecimiento_abs)) %>%
select(mpio, crecimiento_abs) %>%
slice_head(n = 20)
print(top_per)
# Top 20 en crecimiento porcentual
top_pct <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_pct = (pob_2018 - pob_1985) / pob_1985 * 100) %>%
arrange(desc(crecimiento_pct)) %>%
select(mpio, crecimiento_pct)
print(top_pct)
# Top 20 en crecimiento porcentual
top_pct <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_pct = (pob_2018 - pob_1985) / pob_1985 * 100) %>%
arrange(desc(crecimiento_pct)) %>%
select(mpio, crecimiento_pct)  %>%
slice_head(n = 20)
print(top_pct)
write.xlsx(top_pct, file = "top_pct.xlsx", overwrite = TRUE)
rm(top_pct)
top10_densidad <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
slice_head(n = 10) %>%
ungroup()
print(top10_densidad)
top10_densidad <- base_completa %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(mpio, densidad_pob)  %>%
slice_head(n = 10) %>%
ungroup()
print(top10_densidad)
print(top10_densidad)
write.xlsx(top10_densidad, file = "top10_densidad.xlsx", overwrite = TRUE)
# Creamos un objeto intermedio
datos_filtrados <- base_final_imp %>%
select(dpmp, ano, poblacion_imputada) %>%
filter(ano %in% c(1985, 2018))
# Creamos un segundo objeto intermedio 'datos_anchos'
datos_anchos <- datos_filtrados %>%
pivot_wider(
names_from = ano,
values_from = poblacion_imputada,
names_prefix = "pob_"
)
# Creamos el df con los crecimientos absolutos y relativos
crecimiento_municipios <- datos_anchos %>%
mutate(
# Crecimiento Absoluto
crecimiento_abs = (pob_2018 - pob_1985),
# Crecimiento Porcentual
crecimiento_pct = (crecimiento_abs / pob_1985) * 100)
# Ahora pegamos las nuevas dos variables a la base de análisis
# Seleccionando las variables
variables_crecimiento <- crecimiento_municipios %>%
select(dpmp, crecimiento_abs, crecimiento_pct)
# Unimos las nuevas variables a la base de datos principal
base_final_mpio <- left_join(base_final_imp, variables_crecimiento, by = "dpmp")
# DENSIDAD POBLACIONAL
# Calculamos el área total de cada departamento
areas_departamentales <- base_completa %>%
distinct(dp, dpnom, dpmp, mpio_narea) %>%
group_by(dp, dpnom) %>%
summarise(area_total_depto = sum(mpio_narea)) %>%
ungroup()
# Calculamos la población total por departamento y por año
poblacion_departamental <- base_completa %>%
group_by(dp, dpnom, ano) %>%
summarise(poblacion_total_depto = sum(poblacion_imputada)) %>%
ungroup()
# Ahora unimos la población y área para calcular la densidad poblacional departamental por año
densidad_departamental <- left_join(poblacion_departamental, areas_departamentales, by = c("dp", "dpnom")) %>%
mutate(densidad_depto = poblacion_total_depto / area_total_depto)
# CRECIMIENTO POBLACIONAL (ABSOLUTO Y PORCENTUAL)
# Crecimiento Absoluto Departamental
## Añadimos el código de departamento a la tabla de crecimiento.
codigos_depto <- base_completa %>%
distinct(dpmp, dp, dpnom)
## Unimos los códigos de depto a la tabla de crecimiento municipal
crecimiento_municipios_con_depto <- left_join(crecimiento_municipios, codigos_depto, by = "dpmp")
## Agrupamos por departamento y sumamos el crecimiento absoluto
crecimiento_abs_depto <- crecimiento_municipios_con_depto %>%
group_by(dp, dpnom) %>%
summarise(crecimiento_abs_depto = sum(crecimiento_abs, na.rm = TRUE)) %>%
ungroup()
# Crecimiento Porcentual Departamental
# Creamos un nuevo objeto solo con los datos de los años extremos.
poblacion_filtrada_depto <- poblacion_departamental %>%
filter(ano %in% c(1985, 2018))
# Creamos un segundo objeto intermedio en formato ancho.
poblacion_ancha_depto <- poblacion_filtrada_depto %>%
pivot_wider(
names_from = ano,
values_from = poblacion_total_depto,
names_prefix = "pob_depto_"
)
# Creamos el objeto final que contiene el cálculo.
poblacion_depto_extremos <- poblacion_ancha_depto %>%
mutate(
crecimiento_pct_depto = ((pob_depto_2018 - pob_depto_1985) / pob_depto_1985) * 100
)
variables_pct_depto <- poblacion_depto_extremos %>%
select(dp, dpnom, crecimiento_pct_depto)
# Uniendo las variables de crecimiento en un DF
crecimiento_departamental <- left_join(crecimiento_abs_depto, variables_pct_depto, by = c("dp", "dpnom"))
# UNIENDO LAS NUEVAS VARIABLES CREADS
# Seleccionamos solo las llaves y la nueva variable de densidad
variables_densidad_depto <- densidad_departamental %>%
select(dp, dpnom, ano, densidad_depto)
# Unimos estas variables a la base principal
base_con_densidad <- left_join(base_final_imp, variables_densidad_depto, by = c("dp", "dpnom", "ano"))
# Unimos las variables de crecimiento al resultado del paso anterior
base_final_con_agregados <- left_join(base_con_densidad, crecimiento_departamental, by = c("dp", "dpnom"))
# renombrando la base de análisis
base_final_dpto <- base_final_con_agregados
# Top 20 en crecimiento absoluto
top_abs <- base_final_mpio %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_abs = pob_2018 - pob_1985) %>%
arrange(desc(crecimiento_abs)) %>%
select(mpio, crecimiento_abs) %>%
slice_head(n = 20)
print(top_abs)
write.xlsx(top_abs, file = "top_abs.xlsx", overwrite = TRUE)
# Top 20 en crecimiento porcentual
top_pct <- base_final_mpio %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(mpio) %>%
summarise(
pob_1985 = poblacion[ano == 1985],
pob_2018 = poblacion[ano == 2018],
.groups = "drop"
) %>%
mutate(crecimiento_pct = (pob_2018 - pob_1985) / pob_1985 * 100) %>%
arrange(desc(crecimiento_pct)) %>%
select(mpio, crecimiento_pct)  %>%
slice_head(n = 20)
print(top_pct)
write.xlsx(top_pct, file = "top_pct.xlsx", overwrite = TRUE)
top10_densidad <- base_final_mpio %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(mpio, densidad_pob)  %>%
slice_head(n = 10) %>%
ungroup()
print(top10_densidad)
write.xlsx(top10_densidad, file = "top10_densidad.xlsx", overwrite = TRUE)
top10_dpto<- base_final_dpto %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(dpnom, densidad_pob)  %>%
slice_head(n = 5) %>%
ungroup()
print(top10_densidad)
write.xlsx(top10_densidad, file = "top10_densidad.xlsx", overwrite = TRUE)
View(base_final_dpto)
top10_dpto<- base_final_dpto %>%
filter(ano %in% c(1985, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(dpnom, densidad_pob)  %>%
slice_head(n = 5) %>%
ungroup()
print(top10_dpto)
top10_densidad <- base_final_mpio %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(mpio, densidad_pob)  %>%
slice_head(n = 10) %>%
ungroup()
print(top10_densidad)
write.xlsx(top10_densidad, file = "top10_densidad.xlsx", overwrite = TRUE)
top10_dpto<- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(dpnom, densidad_pob)  %>%
slice_head(n = 5) %>%
ungroup()
print(top10_dpto)
write.xlsx(top10_dpto, file = "top10_dpto.xlsx", overwrite = TRUE)
library(ggplot2)
print(top5_dpto)
top5_dpto<- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(dpnom, densidad_pob)  %>%
slice_head(n = 5) %>%
ungroup()
print(top5_dpto)
write.xlsx(top5_dpto, file = "top5_dpto.xlsx", overwrite = TRUE)
View(base_final_dpto)
# 1) Top 5 por año (1993 y 2018)
top5_dpto <- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano) %>%
slice_max(densidad_pob, n = 5, with_ties = FALSE) %>%
ungroup() %>%
distinct(dpnom)
print(top5_dpto)
write.xlsx(top5_dpto, file = "top5_dpto.xlsx", overwrite = TRUE)
# 1) Top 5 por año (1993 y 2018)
top5_dpto<- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(dpnom) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(dpnom, densidad_pob) %>%
slice_head(n = 5) %>% ungroup()
print(top5_dpto)
write.xlsx(top5_dpto, file = "top5_dpto.xlsx", overwrite = TRUE)
top5_dpto <- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
slice_head(n = 5) %>%
select(ano, dpnom, densidad_pob) %>%
ungroup()
print(top5_dpto)
top5_dpto <- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano) %>%
summarise(densidad_pob = mean(densidad_pob, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
slice_head(n = 5) %>%
select(ano, dpnom, densidad_pob) %>%
ungroup()
top5_dpto <- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano) %>%
summarise(densidad_pob = mean(densidad_pob, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
slice_head(n = 5) %>%
select(ano, densidad_pob) %>%
ungroup()
print(top5_dpto)
print(top5_dpto)
write.xlsx(top5_dpto, file = "top5_dpto.xlsx", overwrite = TRUE)
print(top5_dpto)
densidad_dpto <- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano, dpnom) %>%
summarise(
poblacion_total = sum(poblacion, na.rm = TRUE),
area_total = sum(area, na.rm = TRUE),
densidad_pob = poblacion_total / area_total,
.groups = "drop"
)
densidad_dpto <- base_final_dpto %>%
filter(ano %in% c(1993, 2018)) %>%
group_by(ano, dpnom) %>%
summarise(
poblacion_total = sum(poblacion, na.rm = TRUE),
area_total = sum(mpio_narea, na.rm = TRUE),
densidad_pob = poblacion_total / area_total,
.groups = "drop"
)
top5_dpto <- densidad_dpto %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
slice_head(n = 5) %>%
ungroup()
print(top5_dpto)
top5_dpto <- densidad_dpto %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(dpnom, densidad_pob)  %>%
slice_head(n = 5) %>%
ungroup()
top5_dpto <- densidad_dpto %>%
group_by(ano) %>%
arrange(desc(densidad_pob), .by_group = TRUE) %>%
select(ano,dpnom, densidad_pob)  %>%
slice_head(n = 5) %>%
ungroup()
print(top5_dpto)
write.xlsx(top5_dpto, file = "top5_dpto.xlsx", overwrite = TRUE)
ggplot(top5_dpto, aes(x = reorder(dpnom, densidad_pob),
y = densidad_pob,
fill = as.factor(ano))) +
geom_col(position = "dodge") +
coord_flip() +
labs(
title = "Top 5 departamentos con mayor densidad poblacional",
subtitle = "Comparación entre 1993 y 2018",
x = "Departamento",
y = "Densidad poblacional (hab/km²)",
fill = "Año"
) +
theme_minimal()
ggplot(top5_dpto, aes(x = reorder(dpnom, densidad_pob),
y = densidad_pob,
fill = as.factor(ano))) +
geom_col(position = "dodge") +
coord_flip() +
labs(
title = "Top 5 departamentos con mayor densidad poblacional",
subtitle = "Comparación entre 1993 y 2018",
x = "Departamento",
y = "Densidad poblacional (hab/km²)",
fill = "Año"
) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
scale_fill_manual(values = c("1993" = "#1A2A80", "2018"="#FF7A30"))
ggplot(top5_dpto, aes(x = reorder(dpnom, densidad_pob),
y = densidad_pob,
fill = as.factor(ano))) +
geom_col(position = "dodge") +
coord_flip() +
labs(
title = "Top 5 departamentos con mayor densidad poblacional",
x = "Departamento",
y = "Densidad poblacional (hab/km²)",
fill = "Año"
) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
scale_fill_manual(values = c("1993" = "#1A2A80", "2018"="#FF7A30"))
ggsave("grafico_barras.png", plot = p, width = 8, height = 6, dpi = 300)
ggsave("grafico_barras.png", plot = top5_dpto, width = 8, height = 6, dpi = 300)
barras_dpto<- ggplot(top5_dpto, aes(x = reorder(dpnom, densidad_pob),
y = densidad_pob,
fill = as.factor(ano))) +
geom_col(position = "dodge") +
coord_flip() +
labs(
title = "Top 5 departamentos con mayor densidad poblacional",
x = "Departamento",
y = "Densidad poblacional (hab/km²)",
fill = "Año"
) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
scale_fill_manual(values = c("1993" = "#1A2A80", "2018"="#FF7A30"))
ggsave("grafico_barras.png", plot = barras_dpto, width = 8, height = 6, dpi = 300)
write.xlsx(base_final_mpio, file = "base_mpio.xlsx", overwrite = TRUE)
View(base_final_imp)
View(base_final_mpio)
muni_year <- base_final_mpio %>%
group_by(dp, mpio, ano) %>%
summarise(poblacion = sum(poblacion, na.rm = TRUE), .groups = "drop")
View(muni_year)
muni_year <- base_final_mpio %>%
group_by(mpio, ano) %>%
summarise(poblacion = sum(poblacion, na.rm = TRUE), .groups = "drop")
# Calcular percentil de cada municipio por año
pob_percentiles <- base_final_mpio %>%
group_by(ano) %>%
mutate(
percentil = ntile(poblacion, 100),   # 100 → percentiles, 4 → cuartiles
cuartil   = ntile(poblacion, 4)
)%>%
ungroup()
pob_cuartiles <- pob_percentiles %>%
group_by(ano, cuartil) %>%
summarise(
poblacion_total = sum(poblacion, na.rm = TRUE),
.groups="drop"
)
ggplot(pob_cuartiles, aes(x = ano, y = poblacion_total, fill = as.factor(cuartil))) +
geom_area(position = "fill") +  # fill → participación porcentual
labs(
title = "Evolución de la distribución de la población municipal",
subtitle = "Participación de cada cuartil (1985–2018)",
x = "Año",
y = "Proporción de la población",
fill = "Cuartil de municipios"
) +
 theme_minimal()
ggplot(pob_cuartiles, aes(x = ano, y = poblacion_total, fill = as.factor(cuartil))) +
geom_area(position = "fill") +  # fill → participación porcentual
labs(
title = "Evolución de la distribución de la población municipal",
subtitle = "Participación de cada cuartil (1985–2018)",
x = "Año",
y = "Proporción de la población",
fill = "Cuartil de municipios"
) +
theme_minimal()
ggplot(base_completa %>% filter(ano %in% c(1985, 1993, 2005, 2018)),
aes(x = as.factor(ano), y = poblacion)) +
geom_boxplot() +
scale_y_log10() +   # útil porque hay mucha desigualdad entre municipios
labs(
title = "Distribución de la población municipal en Colombia",
y = "Población municipal (escala log)",
x = "Año"
) +
theme_minimal()
